name: Auto Label by Branch

on:
  pull_request:
    types: [opened, edited, synchronize] 

jobs:
  auto-label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Auto Label PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const pr = context.payload.pull_request;
              const prNumber = pr.number;
              const branchName = pr.head.ref;
              const prTitle = pr.title.toLowerCase();
              const labels = [];

              console.log(`üîç PR #${prNumber} on branch: ${branchName}`);
              console.log(`üìù Title: ${pr.title}`);

              // L·∫•y danh s√°ch file thay ƒë·ªïi
              const { data: files } = await github.rest.pulls.listFiles({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });

              const filenames = files.map(f => f.filename);
              console.log('üìÇ Changed files:', filenames);

              // Ki·ªÉm tra folder
              const hasAdminChanges = filenames.some(name => name.startsWith('mmenu-admin/'));
              const hasCdpFEChanges = filenames.some(name => name.startsWith('mmenu-cdp/client/'));
              const hasCdpBEChanges = filenames.some(name => name.startsWith('mmenu-cdp/server/'));
              const hasApiChanges = filenames.some(name => name.startsWith('mmenu-api/'));

              console.log('‚úÖ Folder changes detected:', {
                'ADMIN': hasAdminChanges,
                'CDP FE': hasCdpFEChanges,
                'CDP BE': hasCdpBEChanges,
                'API': hasApiChanges,
              });

              if (hasAdminChanges) labels.push('ADMIN');
              if (hasCdpFEChanges) labels.push('CDP FE');
              if (hasCdpBEChanges) labels.push('CDP BE');
              if (hasApiChanges) labels.push('API');

              if (labels.length > 0) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  labels: labels
                });

                console.log(`üè∑Ô∏è Added labels [${labels.join(', ')}] to PR #${prNumber}`);
              } else {
                console.log('‚ö†Ô∏è No matching folder changes ‚Äî no labels applied.');
              }
            } catch (error) {
              console.error(`‚ùå Failed to label PR:`, error);
            }
